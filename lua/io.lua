--- 简单模式
--- I/O 将当前输入文件作为标准输入(stdin), 将当前输出文件作为标准输出(stdout)
--- io.read(), 从当前输入文件读取字符串, 由它的参数控制读取的内容
--- "*all" 读取整个文件
--- "*line" 读取下一行
--- "*number" 从串中转换出一个数值
--- num 读取num个字符

local res = io.read("*line")
io.write(res, "\n")
io.write("sin(3) = ", math.sin(3), "\n")


--- 完全模式
--- 完全模式的核心在于文件句柄
--- 文件函数: io.open() 需要打开文件的文件名参数, 打开模式的字符串参数
--- 模式:
--- r  读模式
--- r+ 读取更新模式(现有数据保留), 新内容从文件头输入
--- w  写模式, 对数据进行覆盖
--- w+ 写入更新模式(现有数据擦除)
--- a  附加模式
--- a+ 附加更新模式(现有数据保留,只在文件末尾附加)
--- b  附加再后面表示二进制形式打开文件

--- 注意: 当文件不存在时
--- 模式"r","r+",会提示错误,这两种模式不会自动创建为难。
--- 模式"a","a+","w","w+"都会创建文件

--- io:input([file]) 用文件名调用它时, 以文本模式来打开该名字的文件, 并将文件句柄设为默认输入文件.
--- 如果用文件句柄去调用它, 就简单的将该句柄设为默认输入文件. 如果调用时不传入参数, 它返回当前的默认
--- 输入文件

io.input()
print(io.read(11))
